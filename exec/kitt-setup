#!/bin/bash

#- Copyright 2020 Authors of kitt
#-
#- Licensed under the Apache License, Version 2.0 (the "License");
#- you may not use this file except in compliance with the License.
#- You may obtain a copy of the License at
#-
#-     http://www.apache.org/licenses/LICENSE-2.0
#-
#- Unless required by applicable law or agreed to in writing, software
#- distributed under the License is distributed on an "AS IS" BASIS,
#- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#- See the License for the specific language governing permissions and
#- limitations under the License.

# USAGE: kitt setup
#
# Setup one-time networking after host or docker vm restarts.

function options {
  true
}

KITT_IP=169.254.32.1
KITT_HOST_IP=169.254.32.10
KITT_DOCKER_NETWORK=172.31.188.0/24

function main {
  if [[ "$(docker network inspect kitt | jq -r 'map(select(.Name == "kitt")) | length')" == 0 ]]; then
    setup-network
  fi

  os-$(uname -s)-check
}

function setup-network {
  docker network create --subnet "$KITT_DOCKER_NETWORK" kitt
}

function os-Linux-check {
  os-$(uname -s)-up || true
}

function os-Linux-up {
  docker run --rm -i --privileged --network=host --pid=host alpine nsenter -t 1 -m -u -n -i -- \
    bash -c "ip link add dummy0 type dummy; ip addr add ${KITT_IP}/32 dev dummy0; ip link set dev dummy0 up"
}

function os-Linux-down {
  docker run --rm -i --privileged --network=host --pid=host alpine nsenter -t 1 -m -u -n -i -- \
    bash -c "ip addr del ${KITT_IP}/32 dev dummy0"
}

function os-Darwin-check {
  for ip in ${KITT_IP} ${KITT_HOST_IP}; do 
    if ! ifconfig lo0 | grep -q "inet $ip netmask"; then 
      os-$(uname -s)-up
    fi
  done
}

function os-Darwin-up {
  for ip in ${KITT_IP} ${KITT_HOST_IP}; do 
    sudo ifconfig lo0 alias "$ip" netmask 255.255.255.255
  done
}

function os-Darwin-down {
  for ip in ${KITT_IP} ${KITT_HOST_IP}; do 
    sudo ifconfig lo0 -alias "$ip" netmask 255.255.255.255
  done
}

source sub "$0" "$@"
